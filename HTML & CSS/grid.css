.body {
  padding-bottom: 1000px;
}

.div-1 {
  background-color: lightblue;
}

.div-2 {
  background-color: lightpink;
}

.container-div {
  display: grid;
  grid-template-columns: 100px 100px 200px;
  margin-top: 30px;
}

/* A div element usually takes up the entire row, in a grid it only takes up the entire column. Additionally,
there is no space inbetween the two columnns, unlike an inline-block. All columns are vertically aligned.*/

/*Having an extra div in a grid when no columns are available, it wraps around to a new row these have the same
column sizes as the ones above it.*/

.container-div-2 {
  display: grid;
  grid-template-columns: 100px 1fr;
  margin-top: 30px;
}

/*fr is a grid value that stands for free space, and it takes up the rest of the free space on the page in a column*/

.container-div-3 {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  column-gap: 20px;
  row-gap: 40px;
  margin-top: 30px;
}

.div-3 {
  height: 200px;
  background-color: lightpink;
}

.div-3-1 {
  background-color: lightblue;
}

/*the number next to the fr shows us how much space of the remaining that column gets, when we add another fr value 
with equal numberr before it, they will share the space equally. The fr value is always shared as a ratio, depending on 
the numbers bbefore it.*/
